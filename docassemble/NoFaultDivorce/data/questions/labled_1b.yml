---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: |
    COMPLAINT FOR DIVORCE PURSUANT TO G.L. c. 208 ยง 1B 
  short title: |
    No-Fault Complaint for Divorce
  tags:
    - Family
    - Divorce
    - Custody
    - Family and Probate
  authors:
    - Hayden McGuire
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["labled_1b"]
data:
  al_weaver_version: "1.8.0"
  generated on: "2023-02-28"
  title: >-
    Complaint for Divorce
  short title: >-
    Divorce
  description: |-
    This form requests the court to grant you a divorce because the relationship broke down and cannot be repaired.
  original_form: >-
    https://courtforms.jud.state.ma.us/publicforms/PFC0051
  allowed courts: 
    - "Probate and Family Court"
  categories:
    - "FA-00-00-00-00"
  typical role: "plaintiff"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'labled_1b'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-Labled1B'
---
code: |
  interview_short_title = "No-Fault Complaint for Divorce"
---
code: |
  al_form_type = "starts_case" 
---
objects:
  - former: ALPeopleList.using(ask_number=True,target_number=1)
  - users: ALPeopleList.using(ask_number=True,target_number=1)
---
sections:
  - review_labled_1b: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["labled_1b"]["allowed courts"]
  nav.set_section("review_labled_1b")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  marriage_location
  divorce_yes
  users.gather()
  set_parts(subtitle=str(users))
  former[0]
  users[0].address.address
  set_progress(14)
  defendants.gather()
  defendants[0].address.address
  set_progress(28)
  convey_yes
  set_progress(42)
  children.gather()
  if children.there_are_any == True:
    custody_status
  suitable_support_yes
  set_progress(56)
  courts[0].division
  if liberty_yes == True:
    seek_assistance
  other_yes
  today_date
  #set_title_names
  set_custody_status
  set_grant_custody_yes
  interview_order_labled_1b = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  labled_1b_intro
  under_20_mins
  interview_order_labled_1b
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  labled_1b_download
---
id: sets date
code: |
 today_date = format_date(today())
---
id: Complaint_for_Divorce
continue button field: labled_1b_intro
question: |
  What is a "No-Fault Divorce"?
subquestion: |
 A "no-fault divorce," also known as a 1B divorce, simply means one of the spouses beleives the marriage has broken down and cannot be fixed. The court calls this an **"Irretrievable Breakdown."** In a 1B Divorce one party files, rathen than other types where both with file together.
 
 This form can be used if you don't get along with your spouse and now want a divorce. 1B divorces can also be used when you and your spouse can't agree to get a divorce through one of the other types where you file it together.
 
 If this does not sound right for you there is information on other options for divorce types available on [Massachussets official website](https://www.mass.gov/info-details/learn-about-the-types-of-divorce). Along with other resources made for people without attorneys, like [MassLegalHelp.org](https://www.masslegalhelp.org/children-and-families/file-for-divorce). 
---
id: what to except
continue button field: under_20_mins
question: |
  Are you ready to continue?
subquestion: |
  This process should take under **twenty minutes** to complete if you have all of the required material on hand.
  
  Be prepared to answer questions needing:
   
  * Personal Information
  * Spouse Contact Information
  * Information on Children of the marriage
  * Information related to the marriage (e.g., Dates and Locations)
  
  Once you are done with this interview you will get a two documents. A printout for what to do next, titled **"Next Steps for filling your No-Fault Divorce"** and the completed **"Complaint for Divorce."**
---
id: Marriage Information
question: |
  Provide all the neccesary information about your marriage.
fields:
  - "Where did you and your spouse get married?": marriage_location
    maxlength: 36
    hint: e.g., Boston, Massachusetts
    help: |
      Enter the city or town and state.
  - "When did you and your spouse get married?": marriage_date
    datatype: date
  - "What is the full address where you and your spouse last lived together?": last_address_together
    maxlength: 50
    hint: e.g, 120 Tremont St. Boston, MA 02108
  - "When did you last live at this address together?": last_address_date
    datatype: date
  - "Approximatley what date did the marriage breakdown and become unfixable?": breakdown_date
    datatype: date
    help: |
      This date is when you started to think the marriage was over and you want a divorce. You can pick your best estimate if you are unsure.
#Address of last lived should be switched to objects to make collection better.  The open space is prone to errors and lack uniform design choice. 
---
id: last address together gather
question: |
  What was the last address you and your spouse lived at together?
fields:
  - "City or Town": last_city
    maxlength: 20
    hint: Boston
  - "Street and Number": last_street
    maxlength: 36
    hint: 120 Tremont Street
  - "Zip Code": last_zip
    maxlength: 5
    hint: 02108
  - "When did you last live at this address together?": last_address_date
    datatype: date
# attempted to gather last_address_together in peices then grouping in the field on the PDF. This was per the recomendation from one user. However, I tried to do this an failed on three different attempts. This is the question page I had inteded to use. 
---
id: Plaintiff Needs
question: |
  Do you need the court to do any of the following?
fields:
  - "Ensure you or your children keep any existing health insurance?": suitable_support_yes
    datatype: yesnoradio
  - "Is the health insurance for you?": support_plaintiff_yes
    datatype: yesnoradio
    show if: suitable_support_yes
  - "Is the health insurance for any children?": support_children_yes
    datatype: yesnoradio
    show if: suitable_support_yes
  - "Change your last name?": former_name_yes
    datatype: yesnoradio
    help: |
      Last name is the same as "family name" or "surname." If you changed your last name as a part of the marriage and you want to change it back this is how you can do that.
  - "What do you need your last name changed to?": former_name
    maxlength: 45
    show if: former_name_yes
  - "Do you have safety concerns related to, or caused by, this divorce?": liberty_yes
    datatype: yesnoradio
    help: |
      If you are worried about your spouse harming you, your children, or your property then this is one oppritunity to notify the court of that concern.
#for the liberty value set up alternative ending as to instruct litigant to seek out legal assistance to continue. Either through the CSC, legal aid or some private attorney.    
---
id: Children Involved 
question: |
  Are there any children that were born or adopted into the marriage?
subquestion: |
  This includes children born prior to the marraige between the couple. This also includes children that either spouse has a parent or guardian role in. 
  
  **Only include minor or dependant children.**
fields:
  - no label: children.there_are_any
    datatype: yesnoradio
  - How many?: children.target_number
    datatype: integer
    show if: children.there_are_any
validation code: |
  if not children.there_are_any:
    children.target_number = 0
---
id: Children custody prefrence
question: |
  Child Custody
subquestion: |
  Who do you need to have custody of the children? 
field: custody_status
choices:
  - "${ users[0].name }"
  - "${ other_parties[0].name }"
---
id: parent custody choice checkbox
depends on: 
  - custody_status
  - custody_plaintiff_yes
  - custody_defendant_yes
code: |
  if children.target_number >= 1:
    if custody_status == users[0].name:
      custody_plaintiff_yes = True
      custody_defendant_yes = False
    elif custody_status == other_parties[0].name:
      custody_plaintiff_yes = False
      custody_defendant_yes = True
  set_custody_status = True
---
id: grant of custody checkbox
code: |
  if children.there_are_any == True:
    grant_custody_yes = True
  else:
    grant_custody_yes = False
  set_grant_custody_yes = True
---
id: children information gather
sets:
  - children[0].name.first
  - children[0].name.last
  - children[0].name.middle
  - children[0].name.suffix
  - children[0].birthdate
question: |
  % if hasattr(children, 'ask_number') and children.ask_number and children.target_number == 1:
  What is your child's name?
  % else:
  What is the name of your first child?
  % endif
fields:
  - code: |
      children[0].name_fields()
  - "Birthdate": children[0].birthdate
    datatype: date
---
id: your name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
    - users[0].email
    - users[0].phone_number
question:  |
  What is your legal name and contact information?
fields:
  - code: |
      users[0].name_fields()
  - "E-mail Address": users[0].email
  - "Phone Number": users[0].phone_number
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  What is your spouse's name.
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='person')
---
id: Property Info
question: |
  Information on Property Ownership 
fields:
  - "Do you and your spouse own any real estate together?": convey_yes
    datatype: yesnoradio
  - "What is the address of the real estate you need {conveyed}?": real_estate_address
    maxlength: 35
    hint: e.g, 120 Tremont St, Boston MA, 02108
    show if: convey_yes
  - "Is ${ other_parties[0].name }'s and your name on the title?": both_title
    datatype: noyesradio
    show if: convey_yes
  - "Identify all names on the title.": title_names
    maxlength: 100
    show if: both_title
  - "Which County Registery has the deed?": registry_deeds_location
    input type: combobox
    choices:
     - Barnstable County
     - Berkshire County
     - Bristol County
     - Dukes County
     - Essex County
     - Franklin County
     - Hampden County
     - Hampshire County
     - Middlesex County
     - Nantucket County
     - Norfolk County
     - Plymouth County
     - Suffolk County
     - Worcester County
    show if: convey_yes
  - "What Registry book number is it in?": registry_book
    datatype: number
    show if: convey_yes 
  - "What Registry page number is it in?": registry_page
    datatype: number
    show if: convey_yes
terms:
 conveyed: |
   To convey something means to change ownership of it. It is a word used when you change who owns property. 
---
#id: setting title names
#depends on:
#  - both_title
#  - title_names
#code: |
#  if both_title == False:
#    real_estate_name = user[0].name + "and" + other_parties[0].name
#  elif both_title == True:
#    real_estate_name = title_names
#  else:
#    " "
#  set_title_names = True
comment: This block kept returning error realted to having user[0].name. I changed the method to just do it in the attachment block. This provides the inteded output without error. Ideally I would gather as a variable rather than the current method. 
---
if: |
  len(all_matches) and all_courts.filter_courts(allowed_courts) 
id: choose a court (courts matching provided address were found)
question: |
  What court do you want to file in?
subquestion: |
  % if not al_form_type == 'starts_case':
  Look at your court paperwork. Match the name listed there.
  % endif

  % if len(all_matches) > 0:
  Below is a map of the court(s) that serve
  the address you gave us, 
  % if isinstance(addresses_to_search, Iterable):
  ${comma_and_list([address.on_one_line() for address in addresses_to_search],comma_string='; ')}.
  % else:
  ${addresses_to_search.on_one_line()}
  % endif
  
  ${map_of(combined_locations(all_matches))}
  % endif
  
  ${ collapse_template(how_to_pick_court_help_template) }  
fields:
  - no label: trial_court
    datatype: object_radio
    choices: all_matches
    none of the above: True
    disable others: True
    object labeler: court_short_description
    show if: 
      code: |
        len(all_matches)      
  - note: |
      Does the list above look wrong? If your case was filed in
      a court we didn't list, choose from the full list below.
    show if: 
      code: |
        len(all_matches)
  - no label: trial_court
    datatype: object
    object labeler: court_short_label
    choices: all_courts.filter_courts(allowed_courts)   
# This needs to be set so if the other user lives in the county that they last lived in together they need to file there, else they need to file where they live now. 
---
id: Final Screen
question: |
  Is there anything else you think the judge should consider?
subquestion: |
  This can be a useful location to identify any concerns about the divorce you might have. If you indicated a concern about saftey please describe the reason you have this concern to the extent you are comfortable.
fields: 
  - "Is there additional information you want considered?": other_yes
    datatype: yesnoradio
  - "Describe:": additional_context
    input type: area
    show if: other_yes
---
field: seek_assistance
question: You identified a saftey concern.
subquestion: |
  ${ users[0].name }, you identified a **saftey concerns** related to divorcing your spouse. Given this concern it is in your best interest to take advantage of any and all professional legal assistance available to you before moving forward. 
  
  **Consider seeking help from the below resources.**
  
  * The Trial Court Service Center
  * Greater Boston Legal Services
  * North East Legal Aid
  * Volunteer Lawyers Project
  
  Consult the [Massachusetts Legal Resource Finder](https://masslrf.org/en/home) for resources available to you based upon your situation. 
  
  You should still download the complaint you have just completed. Show it to any legal professionals  who provide you with additional assistance on this issue. 
---
id: is there an opposing party?
question: |
  % if al_form_type in ['starts_case','existing_case','appeal'] and user_started_case:
  Is there a **defendant** or respondent in this case? 
  % elif al_form_type in ['starts_case','existing_case','appeal']:
  Is there a **plaintiff** or petitioner in this case?
  % else:
  Is there someone on the other side of your dispute?
  % endif
subquestion: |
  % if al_form_type in ['starts_case','existing_case','appeal'] and user_started_case:
  Answer yes if there is a person or organization you are suing or taking to court.
  % elif al_form_type in ['starts_case','existing_case','appeal']:
  You should be able to find out from the paperwork that told you to 
  go to court.

  Answer yes if someone else has sued you or is bringing you to court.
  % endif
fields:
  - no label: other_parties.there_are_any
    datatype: yesnoradio
---
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
  - x.address.unit
  - x.address.state
  - x.address.country
id: persons address
generic object: ALIndividual
question: |
  What is ${ x.possessive('address') }?
fields:
  - code: |
      x.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
code: |
  user_ask_role = 'plaintiff'
  other_parties.there_are_any = True
  other_parties.there_is_another = False #setting other parties to only be one ever.
---
code: |
  divorce_yes = True 
# this checks the box stating an irretrievble breakdown on the form. 
---
id: preview labled_1b
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_labled_1b'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: labled_1b_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
  # This will need to 
---
id: labled 1b review screen
event: review_labled_1b
question: |
  Review your answers
review:
  - Edit: courts.revisit
    button: |
      **Courts**

      % for item in courts:
        * ${ item }
      % endfor
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: marriage_location
    button: |
      **Where did your marriage happen?**:
      ${ marriage_location }
  - Edit: marriage_date
    button: |
      **When did your marriage happen?**:
      ${ marriage_date }
  - Edit: last_address_together
    button: |
      **What was the last address you and your spouse lived at?**:
      ${ last_address_together }
  - Edit: last_address_date
    button: |
      **When did you live at the last address together?**:
      ${ last_address_date }
  - Edit: children.revisit
    button: |
      **Children**

      % for item in children:
        * ${ item }
      % endfor
  - Edit: breakdown_date
    button: |
      **When would say the marriage became unrepairable?**:
      ${ breakdown_date }
  - Edit: divorce_yes
    button: |
      **Do you want a divorce?**:
      ${ divorce_yes }
  - Edit: grant_custody_yes
    button: |
      **Do you want the court to grant custody of any children?**:
      ${ grant_custody_yes }
  - Edit: custody_plaintiff_yes
    button: |
      **Do you want custody of the children?**:
      ${ word(yesno(custody_plaintiff_yes)) }
  - Edit: custody_defendant_yes
    button: |
      **Do you want your spouse to have custody of any children?**:
      ${ custody_defendant_yes }
  - Edit: liberty_yes
    button: |
      **Do you need the court to limit your spouses ability to restrict your rights?**:
      ${ liberty_yes }
  - Edit: suitable_support_yes
    button: |
      **Do you want the court to make your spouse give you or your children support?**:
      ${ word(yesno(suitable_support_yes)) }
  - Edit: support_plaintiff_yes
    button: |
      **Is it for you?**:
      ${ support_plaintiff_yes }
  - Edit: support_children_yes
    button: |
      **Is it for your children?**:
      ${ support_children_yes }
  - Edit: real_estate_address
    button: |
      **What is the address of the real estate you need conveyed?**:
      ${ real_estate_address }
  - Edit: convey_yes
    button: |
      **Do you want the court to convey any property?**:
      ${ word(yesno(convey_yes)) }
  - Edit: real_estate_name
    button: |
      **Who currently has the title to the property?**:
      ${ real_estate_name }
  - Edit: registry_deeds_location
    button: |
      **Where is the Registery of Deeds that has the deed?**:
      ${ registry_deeds_location }
  - Edit: registry_book
    button: |
      **What Registry book is it in?**:
      ${ registry_book }
  - Edit: registry_page
    button: |
      **What Registry page is it in?**:
      ${ registry_page }
  - Edit: former[0]
    button: |
      **Former name**:
      ${ former[0] }
  - Edit: former_name_yes
    button: |
      **Do you want the court to change your legal name to a different one?**:
      ${ former_name_yes }
  - Edit: other_yes
    button: |
      **Is there any other info?**:
      ${ word(yesno(other_yes)) }
  - Edit: today_date
    button: |
      **What is todays date?**:
      ${ today_date }
---
continue button field: courts.revisit
question: |
  Edit courts
subquestion: |
  ${ courts.table }

  ${ courts.add_action() }
---
table: courts.table
rows: courts
columns:
  - Division: |
      row_item.division if defined("row_item.division") else ""
edit:
  - division
confirm: True
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.state") else ""
edit:
  - name.first
  - address.state
confirm: True
---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
edit:
  - name.first
  - address.zip
confirm: True
---
continue button field: children.revisit
question: |
  Edit children
subquestion: |
  ${ children.table }

  ${ children.add_action() }
---
table: children.table
rows: children
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True
---
id: download labled_1b
event: labled_1b_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_labled_1b'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - labled_1b_Post_interview_instructions: ALDocument.using(title="Instructions", filename="labled_1b_next_steps.docx", enabled=True, has_addendum=False)
  - labled_1b_attachment: ALDocument.using(title="Complaint for Divorce", filename="labled_1b", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[labled_1b_Post_interview_instructions, labled_1b_attachment], filename="labled_1b", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[labled_1b_attachment],  filename="labled_1b", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: labled_1b_next_steps
  docx template file: labled_1b_next_steps.docx
  variable name: labled_1b_Post_interview_instructions[i]
  skip undefined: True
---
attachment:
  name: labled 1b
  filename: labled_1b
  variable name: labled_1b_attachment[i]
  skip undefined: True
  pdf template file: labled_1b.pdf
  fields:
      - "court_division": ${ courts[0].division }
      - "docket_number": ${ docket_number }
      - "users": ${ users }
      - "defendants": ${ defendants }
      - "users_address_county": ${ users[0].address.county }
      - "users1_address_address1": ${ users[0].address.address }
      - "users1_address_city1": ${ users[0].address.city }
      - "users1_address_zip1": ${ users[0].address.zip }
      - "users1_address_state1": ${ users[0].address.state }
      - "defendants_address_address": ${ defendants[0].address.address }
      - "defendants_address_city": ${ defendants[0].address.city }
      - "defendants_address_county": ${ defendants[0].address.county }
      - "defendants_address_state": ${ defendants[0].address.state }
      - "defendants_address_zip": ${ defendants[0].address.zip }
      - "marriage_location": ${ marriage_location }
      - "marriage_date": ${ marriage_date.format() }
      - "last_address_together": ${ last_address_together }
      - "last_address_date": ${ last_address_date.format() }
      - "child1": ${ children[0] }
      - "child3": ${ children[2] }
      - "child2": ${ children[1] }
      - "child4": ${ children[3] }
      - "child1_birthdate": ${ format_date(children[0].birthdate, format='short') }
      - "child2_birthdate": ${ format_date(children[1].birthdate, format='short') }
      - "child3_birthdate": ${ format_date(children[2].birthdate, format='short') }
      - "child4_birthdate": ${ format_date(children[3].birthdate, format='short') }
      - "breakdown_date": ${ breakdown_date.format() }
      - "divorce_yes": ${ divorce_yes }
      - "grant_custody_yes": ${ grant_custody_yes }
      - "custody_plaintiff_yes": ${ custody_plaintiff_yes }
      - "custody_defendant_yes": ${ custody_defendant_yes }
      - "liberty_yes": ${ liberty_yes }
      - "suitable_support_yes": ${ suitable_support_yes }
      - "support_plaintiff_yes": ${ support_plaintiff_yes }
      - "support_children_yes": ${ support_children_yes }
      - "real_estate_address": ${ real_estate_address }
      - "convey_yes": ${ convey_yes }
      - "real_estate_name": |
          % if both_title == False:
            ${ users[0].name} and ${ other_parties[0].name }
          % else:
            ${ title_names }
          %endif
      - "registry_deeds_location": ${ registry_deeds_location }
      - "registry_book": ${ int(registry_book) }
      - "registry_page": ${ int(registry_page) }
      - "former_name": ${ former_name }
      - "former_name_yes": ${ former_name_yes }
      - "other_yes": ${ other_yes }
      - "additional_context": ${ additional_context }
      - "today_date": ${ today_date }
      - "users1_name": ${ users[0].name }
      - "users1_address_address2": ${ users[0].address.address }
      - "users1_address_city2": ${ users[0].address.city }
      - "users1_address_zip2": ${ users[0].address.zip }
      - "users1_address_state2": ${ users[0].address.state }
      - "users1_address_unit": ${ users[0].address.unit }
      - "users1_email": ${ users[0].email }
      - "users1_phone_number": ${ users[0].phone_number }